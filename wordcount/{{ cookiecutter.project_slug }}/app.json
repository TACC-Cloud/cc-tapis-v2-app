{
  "checkpointable": false,
  "name": "{{ app.name }}",
  "executionSystem": "{{ app.execution_system }}",
  "executionType": "HPC",
  "deploymentPath": "{{ username }}/apps/{{ app.name }}-{{ app.version }}",
  "deploymentSystem": "{{ app.deployment_system }}",
  "helpURI": "",
  "label": "{{ app.label }}",
  "shortDescription": "{{ app.description }}",
  "longDescription": "",
  "modules": ["load tacc-singularity"],
  "ontology": [],
  "parallelism": "SERIAL",
  "tags": [],
  "templatePath": "run.sh",
  "testPath": "test.sh",
  "version": "{{ app.version }}",
  "defaultMaxRunTime": "00:30:00",
  "inputs": [   {
    "id": "input1",
    "value": {
      "visible": true,
      "required": true,
      "order": 0
    },
    "details": {
      "label": "Target file",
      "description": ""
    },
    "semantics": {
      "minCardinality": 1,
      "maxCardinality": 1,
      "ontology": []
    }
  }
],
  "parameters": [
    {
      "id": "cli_opts",
      "value": {
        "visible": true,
        "required": false,
        "type": "string",
        "order": 1,
        "default": ""
      },
      "details": {
        "label": "Command-line options",
        "description": "Command-line options to be passed to the executable."
      },
      "semantics": {
        "minCardinality": 1,
        "maxCardinality": 1,
        "ontology": []
      }
    },
    {
      "id": "CONTAINER_IMAGE",
      "value": {
        "visible": false,
        "required": true,
        "type": "string",
        "order": 1000,
        "default": "{{ docker.namespace }}/{{ docker.repo }}:{{ docker.tag}}"
      },
      "details": {
        "label": "Linux container repo",
        "description": "Repository namespace/repo:tag supporting this app"
      },
      "semantics": {
        "minCardinality": 1,
        "maxCardinality": 1,
        "ontology": []
      }
    }
  ],
  "outputs": [
    {
      "id": "output1",
      "value": {
        "order": 100,
        "default": "wc_out/output.txt"
      },
      "details": {
        "label": "STDOUT from the wc command"
      },
      "semantics": {
        "minCardinality": 0,
        "maxCardinality": 1,
        "ontology": []
      }
    }
  ]
}
